{"ast":null,"code":"import { createStore } from 'redux';\nconst initialState = {\n  color: ['#16a085', '#27ae60', '#2c3e50', '#f39c12', '#e74c3c', '#9b59b6', '#FB6964', '#342224', '#472E32', '#BDBB99', '#77B1A9', '#73A857'],\n  colornow: 0\n};\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === 'CHANGECOLORNOW') {\n    return Object.assign({}, state, {\n      colornow: CO\n    });\n  }\n\n  if (action.type === 'LOAD_POSTS') {\n    return { ...state,\n      posts: state.posts.concat(action.payload)\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nexport default store;","map":{"version":3,"sources":["/Users/vcv/Desktop/create redux app/react-redux-tutorial/src/store/index.js"],"names":["createStore","initialState","color","colornow","reducer","state","action","type","Object","assign","CO","posts","concat","payload","store","window","__REDUX_DEVTOOLS_EXTENSION__"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CAAC,SAAD,EAAW,SAAX,EAAqB,SAArB,EAA+B,SAA/B,EAAyC,SAAzC,EAAmD,SAAnD,EAA6D,SAA7D,EAAuE,SAAvE,EAAiF,SAAjF,EAA2F,SAA3F,EAAqG,SAArG,EAA+G,SAA/G,CADU;AAEjBC,EAAAA,QAAQ,EAAE;AAFO,CAArB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAChD,MAAIA,MAAM,CAACC,IAAP,KAAgB,gBAApB,EAAsC;AACpC,WAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,MAAAA,QAAQ,EAAEO;AADoB,KAAzB,CAAP;AAGD;;AAED,MAAIJ,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO,EACL,GAAGF,KADE;AAELM,MAAAA,KAAK,EAAEN,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBN,MAAM,CAACO,OAA1B;AAFF,KAAP;AAID;;AAED,SAAOR,KAAP;AACD,CAfD;;AAiBA,MAAMS,KAAK,GAAGd,WAAW,CAACI,OAAD,EAAWW,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAAlD,CAAzB;AAGA,eAAeF,KAAf","sourcesContent":["import { createStore } from 'redux'\n\nconst initialState = {\n    color: ['#16a085','#27ae60','#2c3e50','#f39c12','#e74c3c','#9b59b6','#FB6964','#342224','#472E32','#BDBB99','#77B1A9','#73A857'],\n    colornow: 0,\n\n}\n\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === 'CHANGECOLORNOW') {\n    return Object.assign({}, state, {\n      colornow: CO\n    })\n  }\n\n  if (action.type === 'LOAD_POSTS') {\n    return {\n      ...state,\n      posts: state.posts.concat(action.payload)\n    }\n  }\n\n  return state\n}\n\nconst store = createStore(reducer,  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nexport default store"]},"metadata":{},"sourceType":"module"}