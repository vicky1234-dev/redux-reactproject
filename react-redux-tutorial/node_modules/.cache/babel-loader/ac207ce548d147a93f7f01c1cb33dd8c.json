{"ast":null,"code":"var _jsxFileName = \"/Users/vcv/Desktop/create redux app/react-redux-tutorial/src/App.js\";\nimport React, { useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Quotebox } from './Components/Quotebox.js';\nimport { connect } from 'react-redux';\n\nfunction App(props) {\n  const [color, setColor] = useState([...props.colorarray]); //initializing state from redux store values\n\n  var [colornow, setColornow] = useState(props.colornow); //\n\n  const [wrapperclass, setWrapperclass] = useState('wrapper');\n  const mystyle = {\n    //inline style\n    backgroundColor: color[props.colornow],\n    color: color[props.colornow]\n  };\n\n  function colorchange() {\n    if (props.colornow >= color.length) {\n      document.getElementById('new-quote').style.color = 'red';\n      console.log();\n      props.dispatch({\n        //dispatching action to change color value to first array item\n        type: 'RESETCOLOR'\n      });\n    }\n\n    setWrapperclass('wrapperClass');\n    setTimeout(function () {\n      setWrapperclass('wrapper');\n      props.dispatch({\n        //dispatching action to change color value\n        type: 'CHANGECOLORNOW'\n      });\n    }, 10);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperclass,\n    style: mystyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Quotebox, {\n    color: color[props.colornow],\n    colorchange: colorchange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, props.colornow), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, colornow));\n}\n\nconst mapStateToProps = state => {\n  return {\n    colorarray: state.color,\n    colornow: state.colornow\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/vcv/Desktop/create redux app/react-redux-tutorial/src/App.js"],"names":["React","useState","Quotebox","connect","App","props","color","setColor","colorarray","colornow","setColornow","wrapperclass","setWrapperclass","mystyle","backgroundColor","colorchange","length","document","getElementById","style","console","log","dispatch","type","setTimeout","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,WAAP;AACA,SAAQC,QAAR,QAAuB,0BAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAqB;AAEjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAC,GAAGI,KAAK,CAACG,UAAV,CAAD,CAAlC,CAFiB,CAE0C;;AAC3D,MAAI,CAACC,QAAD,EAAYC,WAAZ,IAA2BT,QAAQ,CAACI,KAAK,CAACI,QAAP,CAAvC,CAHiB,CAG2C;;AAE5D,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,SAAD,CAAhD;AACA,QAAMY,OAAO,GAAG;AAAoB;AAChCC,IAAAA,eAAe,EAAER,KAAK,CAACD,KAAK,CAACI,QAAP,CADV;AAEZH,IAAAA,KAAK,EAAEA,KAAK,CAACD,KAAK,CAACI,QAAP;AAFA,GAAhB;;AAKA,WAASM,WAAT,GAAuB;AACnB,QAAGV,KAAK,CAACI,QAAN,IAAkBH,KAAK,CAACU,MAA3B,EAAmC;AAE/BC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAArC,CAA2Cb,KAA3C,GAAmD,KAAnD;AAEAc,MAAAA,OAAO,CAACC,GAAR;AACDhB,MAAAA,KAAK,CAACiB,QAAN,CAAe;AAAM;AACpBC,QAAAA,IAAI,EAAE;AADQ,OAAf;AAGF;;AAEDX,IAAAA,eAAe,CAAC,cAAD,CAAf;AACAY,IAAAA,UAAU,CAAC,YAAU;AAEjBZ,MAAAA,eAAe,CAAC,SAAD,CAAf;AACAP,MAAAA,KAAK,CAACiB,QAAN,CAAe;AAAY;AACvBC,QAAAA,IAAI,EAAE;AADK,OAAf;AAIH,KAPS,EAOR,EAPQ,CAAV;AAQH;;AAED,sBAAQ,uDACJ;AAAK,IAAA,SAAS,EAAEZ,YAAhB;AAA8B,IAAA,KAAK,EAAEE,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEP,KAAK,CAACD,KAAK,CAACI,QAAP,CAAtB;AAAwC,IAAA,WAAW,EAAEM,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADI,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIV,KAAK,CAACI,QAAV,CAHF,eAIJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,QAAJ,CAJI,CAAR;AAOH;;AAED,MAAMgB,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AAAElB,IAAAA,UAAU,EAAEkB,KAAK,CAACpB,KAApB;AAA4BG,IAAAA,QAAQ,EAAEiB,KAAK,CAACjB;AAA5C,GAAP;AACD,CAFH;;AAIE,eAAeN,OAAO,CACpBsB,eADoB,CAAP,CAEbrB,GAFa,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Quotebox} from './Components/Quotebox.js'\nimport { connect } from 'react-redux'\n\nfunction App(props ) {\n    \n    const [color, setColor] = useState([...props.colorarray]); //initializing state from redux store values\n    var [colornow , setColornow] = useState(props.colornow)     //\n    \n    const [wrapperclass, setWrapperclass] = useState('wrapper')\n    const mystyle = {                   //inline style\n        backgroundColor: color[props.colornow],\n        color: color[props.colornow]\n    };\n    \n    function colorchange() {\n        if(props.colornow >= color.length) {\n           \n            document.getElementById('new-quote').style.color = 'red'\n\n            console.log()\n           props.dispatch({     //dispatching action to change color value to first array item\n            type: 'RESETCOLOR'\n          })\n        } \n\n        setWrapperclass('wrapperClass')\n        setTimeout(function(){\n            \n            setWrapperclass('wrapper')\n            props.dispatch({           //dispatching action to change color value\n                type: 'CHANGECOLORNOW'\n              })\n\n        },10)\n    }\n\n    return (<>\n        <div className={wrapperclass} style={mystyle}>\n            <Quotebox color={color[props.colornow]} colorchange={colorchange} ></Quotebox>\n        </div><p>{props.colornow}</p>\n        <p>{colornow}</p>\n        </>\n    );\n}\n\nconst mapStateToProps = state => {\n    return { colorarray: state.color , colornow: state.colornow }\n  }\n  \n  export default connect(\n    mapStateToProps\n  )(App)\n\n"]},"metadata":{},"sourceType":"module"}