{"ast":null,"code":"var _jsxFileName = \"/Users/vcv/Desktop/create redux app/react-redux-tutorial/src/App.js\";\nimport React, { useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Quotebox } from './Components/Quotebox.js';\nimport { connect } from 'react-redux';\n\nfunction App({\n  props\n}) {\n  KC;\n  const [wrapperclass, setWrapperclass] = useState('wrapper');\n  var [colornow, setColornow] = useState(0);\n  const mystyle = {\n    backgroundColor: color[colornow],\n    color: color[colornow]\n  };\n\n  function colorchange() {\n    if (colornow >= color.length) {\n      colornow = 0;\n    }\n\n    setWrapperclass('wrapperClass');\n    setTimeout(function () {\n      setWrapperclass('wrapper');\n      setColornow(colornow + 1);\n    }, 10);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperclass,\n    style: mystyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Quotebox, {\n    color: color[colornow],\n    colorchange: colorchange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, posts)));\n}\n\nconst mapStateToProps = state => {\n  return {\n    color: state.color,\n    colornow: state.colornow,\n    mystyle: state.mystyle\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/vcv/Desktop/create redux app/react-redux-tutorial/src/App.js"],"names":["React","useState","Quotebox","connect","App","props","KC","wrapperclass","setWrapperclass","colornow","setColornow","mystyle","backgroundColor","color","colorchange","length","setTimeout","posts","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,WAAP;AACA,SAAQC,QAAR,QAAuB,0BAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,GAAT,CAAa;AAAEC,EAAAA;AAAF,CAAb,EAAwB;AACpBC,EAAAA,EAAE;AAEF,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,SAAD,CAAhD;AACA,MAAI,CAACQ,QAAD,EAAYC,WAAZ,IAA2BT,QAAQ,CAAC,CAAD,CAAvC;AACA,QAAMU,OAAO,GAAG;AACZC,IAAAA,eAAe,EAAEC,KAAK,CAACJ,QAAD,CADV;AAEZI,IAAAA,KAAK,EAAEA,KAAK,CAACJ,QAAD;AAFA,GAAhB;;AAKA,WAASK,WAAT,GAAuB;AACnB,QAAGL,QAAQ,IAAII,KAAK,CAACE,MAArB,EAA6B;AACzBN,MAAAA,QAAQ,GAAG,CAAX;AACH;;AACDD,IAAAA,eAAe,CAAC,cAAD,CAAf;AACAQ,IAAAA,UAAU,CAAC,YAAU;AACjBR,MAAAA,eAAe,CAAC,SAAD,CAAf;AACAE,MAAAA,WAAW,CAACD,QAAQ,GAAC,CAAV,CAAX;AAEH,KAJS,EAIR,EAJQ,CAAV;AAKH;;AAED,sBAAQ,uDACJ;AAAK,IAAA,SAAS,EAAEF,YAAhB;AAA8B,IAAA,KAAK,EAAEI,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEE,KAAK,CAACJ,QAAD,CAAtB;AAAkC,IAAA,WAAW,EAAEK,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,KAAJ,CAFJ,CADI,CAAR;AAMH;;AAED,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AAAEN,IAAAA,KAAK,EAAEM,KAAK,CAACN,KAAf;AAAuBJ,IAAAA,QAAQ,EAAEU,KAAK,CAACV,QAAvC;AAAkDE,IAAAA,OAAO,EAAEQ,KAAK,CAACR;AAAjE,GAAP;AACD,CAFH;;AAIE,eAAeR,OAAO,CAACe,eAAD,CAAP,CAAyBd,GAAzB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Quotebox} from './Components/Quotebox.js'\nimport { connect } from 'react-redux'\n\nfunction App({ props }) {\n    KC\n    \n    const [wrapperclass, setWrapperclass] = useState('wrapper')\n    var [colornow , setColornow] = useState(0)\n    const mystyle = {\n        backgroundColor: color[colornow],\n        color: color[colornow]\n    };\n    \n    function colorchange() {\n        if(colornow >= color.length) {\n            colornow = 0\n        } \n        setWrapperclass('wrapperClass')\n        setTimeout(function(){\n            setWrapperclass('wrapper')\n            setColornow(colornow+1)\n\n        },10)\n    }\n\n    return (<>\n        <div className={wrapperclass} style={mystyle}>\n            <Quotebox color={color[colornow]} colorchange={colorchange} ></Quotebox>\n            <p>{posts}</p>\n        </div></>\n    );\n}\n\nconst mapStateToProps = state => {\n    return { color: state.color , colornow: state.colornow , mystyle: state.mystyle }\n  }\n  \n  export default connect(mapStateToProps)(App)"]},"metadata":{},"sourceType":"module"}