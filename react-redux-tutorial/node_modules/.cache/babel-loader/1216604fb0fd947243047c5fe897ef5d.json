{"ast":null,"code":"var _jsxFileName = \"/Users/vcv/Desktop/create redux app/react-redux-tutorial/src/App.js\";\nimport React, { useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Quotebox } from './Components/Quotebox.js';\nimport { connect } from 'react-redux';\n\nfunction App({\n  colorarray,\n  colornow\n}, props) {\n  const [color, setColor] = useState([...colorarray]); //initializing state from redux store values\n\n  var [colornow, setColornow] = useState(colornow); //\n\n  const [wrapperclass, setWrapperclass] = useState('wrapper');\n  const mystyle = {\n    backgroundColor: color[colornow],\n    color: color[colornow]\n  };\n\n  function colorchange() {\n    if (colornow >= color.length) {\n      colornow = 0;\n    }\n\n    setWrapperclass('wrapperClass');\n    setTimeout(function () {\n      setWrapperclass('wrapper');\n      setColornow(colornow + 1);\n    }, 10);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperclass,\n    style: mystyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Quotebox, {\n    color: color[colornow],\n    colorchange: colorchange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  })));\n}\n\nconst mapStateToProps = state => {\n  return {\n    colorarray: state.color,\n    colornow: state.colornow\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatch\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/vcv/Desktop/create redux app/react-redux-tutorial/src/App.js"],"names":["React","useState","Quotebox","connect","App","colorarray","colornow","props","color","setColor","setColornow","wrapperclass","setWrapperclass","mystyle","backgroundColor","colorchange","length","setTimeout","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,WAAP;AACA,SAAQC,QAAR,QAAuB,0BAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,GAAT,CAAa;AAACC,EAAAA,UAAD;AAAcC,EAAAA;AAAd,CAAb,EAAsCC,KAAtC,EAA6C;AAEzC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAC,GAAGI,UAAJ,CAAD,CAAlC,CAFyC,CAEY;;AACrD,MAAI,CAACC,QAAD,EAAYI,WAAZ,IAA2BT,QAAQ,CAACK,QAAD,CAAvC,CAHyC,CAGa;;AAEtD,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,SAAD,CAAhD;AACA,QAAMY,OAAO,GAAG;AACZC,IAAAA,eAAe,EAAEN,KAAK,CAACF,QAAD,CADV;AAEZE,IAAAA,KAAK,EAAEA,KAAK,CAACF,QAAD;AAFA,GAAhB;;AAKA,WAASS,WAAT,GAAuB;AACnB,QAAGT,QAAQ,IAAIE,KAAK,CAACQ,MAArB,EAA6B;AACzBV,MAAAA,QAAQ,GAAG,CAAX;AACH;;AACDM,IAAAA,eAAe,CAAC,cAAD,CAAf;AACAK,IAAAA,UAAU,CAAC,YAAU;AACjBL,MAAAA,eAAe,CAAC,SAAD,CAAf;AACAF,MAAAA,WAAW,CAACJ,QAAQ,GAAC,CAAV,CAAX;AAEH,KAJS,EAIR,EAJQ,CAAV;AAKH;;AAED,sBAAQ,uDACJ;AAAK,IAAA,SAAS,EAAEK,YAAhB;AAA8B,IAAA,KAAK,EAAEE,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEL,KAAK,CAACF,QAAD,CAAtB;AAAkC,IAAA,WAAW,EAAES,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADI,CAAR;AAMH;;AAED,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AAAEd,IAAAA,UAAU,EAAEc,KAAK,CAACX,KAApB;AAA4BF,IAAAA,QAAQ,EAAEa,KAAK,CAACb;AAA5C,GAAP;AACD,CAFH;;AAIA,MAAMc,kBAAkB,GAAGC,QAAQ,IAAI;AACvC,SAAO;AACHA,IAAAA;AADG,GAAP;AAGC,CAJD;;AAME,eAAelB,OAAO,CACpBe,eADoB,EAEpBE,kBAFoB,CAAP,CAGbhB,GAHa,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Quotebox} from './Components/Quotebox.js'\nimport { connect } from 'react-redux'\n\nfunction App({colorarray , colornow} ,props) {\n    \n    const [color, setColor] = useState([...colorarray]); //initializing state from redux store values\n    var [colornow , setColornow] = useState(colornow)     //\n    \n    const [wrapperclass, setWrapperclass] = useState('wrapper')\n    const mystyle = {\n        backgroundColor: color[colornow],\n        color: color[colornow]\n    };\n    \n    function colorchange() {\n        if(colornow >= color.length) {\n            colornow = 0\n        } \n        setWrapperclass('wrapperClass')\n        setTimeout(function(){\n            setWrapperclass('wrapper')\n            setColornow(colornow+1)\n\n        },10)\n    }\n\n    return (<>\n        <div className={wrapperclass} style={mystyle}>\n            <Quotebox color={color[colornow]} colorchange={colorchange} ></Quotebox>\n        </div>\n        </>\n    );\n}\n\nconst mapStateToProps = state => {\n    return { colorarray: state.color , colornow: state.colornow }\n  }\n  \nconst mapDispatchToProps = dispatch => {\nreturn {\n    dispatch\n}\n}\n  \n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(App)\n\n"]},"metadata":{},"sourceType":"module"}