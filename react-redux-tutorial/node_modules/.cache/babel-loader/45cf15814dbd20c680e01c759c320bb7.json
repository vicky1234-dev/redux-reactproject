{"ast":null,"code":"var _jsxFileName = \"/Users/vcv/Desktop/create redux app/react-redux-tutorial/src/Components/Quotebox.js\";\nimport React, { useEffect, useState } from 'react';\nexport const Quotebox = props => {\n  let randomquote = Math.round(Math.random() * 10);\n  const [users, setUsers] = useState([]);\n  const [quote, setQuote] = useState('');\n  const [author, setAuthor] = useState('');\n  const [Animationclass, setAnimationclass] = useState('quote-text');\n  const [AnimationclassAuthor, setAnimationclassAuthor] = useState('quote-author');\n  let color = props.color;\n  const mystyle = {\n    backgroundColor: props.color\n  };\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  async function getUsers() {\n    const response = await fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json');\n    const users = await response.json();\n    console.log(users);\n    setUsers(users.quotes);\n    setQuote(users.quotes[randomquote].quote);\n    setAuthor(users.quotes[randomquote].author);\n  }\n\n  function eventhandler() {\n    setQuote(users[++randomquote].quote);\n    setAuthor(users[++randomquote].author);\n  }\n\n  function eventmain(e) {\n    setAnimationclass('jj');\n    setAnimationclassAuthor('kk');\n    setTimeout(function () {\n      setAnimationclass('quote-text');\n      setAnimationclassAuthor('quote-author');\n      eventhandler();\n    }, 1000);\n    props.colorchange();\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"quote-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: Animationclass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-quote-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, quote)), /*#__PURE__*/React.createElement(\"div\", {\n    className: AnimationclassAuthor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"- \", /*#__PURE__*/React.createElement(\"span\", {\n    id: \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 57\n    }\n  }, author)), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    class: \"button\",\n    style: mystyle,\n    id: \"tweet-quote\",\n    title: \"Tweet this quote!\",\n    target: \"_blank\",\n    href: \"https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=%22Either%20write%20something%20worth%20reading%20or%20do%20something%20worth%20writing.%22%20Benjamin%20Franklin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fab fa-twitter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"a\", {\n    class: \"button\",\n    style: mystyle,\n    id: \"tumblr-quote\",\n    title: \"Post this quote on tumblr!\",\n    target: \"_blank\",\n    href: \"https://www.tumblr.com/widgets/share/tool?posttype=quote&tags=quotes,freecodecamp&caption=Benjamin%20Franklin&content=Either%20write%20something%20worth%20reading%20or%20do%20something%20worth%20writing.&canonicalUrl=https%3A%2F%2Fwww.tumblr.com%2Fbuttons&shareSource=tumblr_share_button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fab fa-tumblr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: eventmain,\n    style: mystyle,\n    class: \"button\",\n    id: \"new-quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"New quote\"))));\n};","map":{"version":3,"sources":["/Users/vcv/Desktop/create redux app/react-redux-tutorial/src/Components/Quotebox.js"],"names":["React","useEffect","useState","Quotebox","props","randomquote","Math","round","random","users","setUsers","quote","setQuote","author","setAuthor","Animationclass","setAnimationclass","AnimationclassAuthor","setAnimationclassAuthor","color","mystyle","backgroundColor","getUsers","response","fetch","json","console","log","quotes","eventhandler","eventmain","e","setTimeout","colorchange"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n \nexport const Quotebox = (props) => {\n\n  let randomquote = Math.round(Math.random()*10)\n  \n  const [users, setUsers] = useState([]);\n  const [quote, setQuote] = useState('');\n  const [author, setAuthor] = useState('');\n  const [Animationclass, setAnimationclass] = useState('quote-text');\n  const [AnimationclassAuthor, setAnimationclassAuthor] = useState('quote-author');\n  let color = props.color\n   \n  const mystyle = {\n    backgroundColor: props.color,\n    };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  \n  async function getUsers() {\n    const response = await fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json');\n    const users = await response.json();\n    console.log(users)\n    setUsers(users.quotes);\n    setQuote( users.quotes[randomquote].quote )\n    setAuthor( users.quotes[randomquote].author );\n\n  }\n\nfunction eventhandler() {\n    setQuote( users[++randomquote].quote )\n    setAuthor( users[++randomquote].author )\n}\n\nfunction eventmain(e) {\n    \n    setAnimationclass('jj')\n    setAnimationclassAuthor('kk')\n    setTimeout(function(){\n        setAnimationclass('quote-text')\n        setAnimationclassAuthor('quote-author')\n        eventhandler()\n    },1000)\n    props.colorchange()\n    \n}\n  return (<>\n    \n    <div id=\"quote-box\">\n                <div className={Animationclass}>\n                    <i className=\"fa fa-quote-left\"></i>\n                <span id=\"text\">{quote}</span>\n                </div>\n                <div className={AnimationclassAuthor}>- <span id=\"author\">{author}</span></div>\n                <div class=\"buttons\">\n                    <a class=\"button\" style={mystyle} id=\"tweet-quote\" title=\"Tweet this quote!\" target=\"_blank\" href=\"https://twitter.com/intent/tweet?hashtags=quotes&amp;related=freecodecamp&amp;text=%22Either%20write%20something%20worth%20reading%20or%20do%20something%20worth%20writing.%22%20Benjamin%20Franklin\">\n                        <i class=\"fab fa-twitter\"></i>\n                    </a>\n                    <a class=\"button\" style={mystyle} id=\"tumblr-quote\" title=\"Post this quote on tumblr!\" target=\"_blank\" href=\"https://www.tumblr.com/widgets/share/tool?posttype=quote&amp;tags=quotes,freecodecamp&amp;caption=Benjamin%20Franklin&amp;content=Either%20write%20something%20worth%20reading%20or%20do%20something%20worth%20writing.&amp;canonicalUrl=https%3A%2F%2Fwww.tumblr.com%2Fbuttons&amp;shareSource=tumblr_share_button\">\n                        <i class=\"fab fa-tumblr\"></i>\n                    </a>\n                    <button onClick={eventmain} style={mystyle} class=\"button\" id=\"new-quote\">New quote</button>\n                    </div>\n                </div>\n       \n  </>);\n};\n\n"]},"metadata":{},"sourceType":"module"}